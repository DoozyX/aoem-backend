/**
 * MOEPP CITES API
 * MOEPP CITES API docs
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { SpecimenApplicantDtoNetMass } from '../models/SpecimenApplicantDtoNetMass';
import { SpecimenCountryDataApplicantDto } from '../models/SpecimenCountryDataApplicantDto';
import { SpecimenDescriptionDto } from '../models/SpecimenDescriptionDto';
import { HttpFile } from '../http/http';

export class SpecimenApplicantDto {
    /**
    * 8. Description Of specimens (incl. marks, sex, date of birth for live animals)
    */
    'description': SpecimenDescriptionDto;
    'netMass': SpecimenApplicantDtoNetMass | null;
    /**
    * 10. Quantity
    */
    'quantity': number | null;
    /**
    * 11. CITES Appendix
    */
    'citesAppendix': SpecimenApplicantDtoCitesAppendixEnum;
    /**
    * 12. List of species
    */
    'speciesList': SpecimenApplicantDtoSpeciesListEnum;
    /**
    * 13. Source
    */
    'source': SpecimenApplicantDtoSourceEnum;
    /**
    * 14. Purpose
    */
    'purpose': SpecimenApplicantDtoPurposeEnum;
    'specimenOrigin': SpecimenCountryDataApplicantDto;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "description",
            "baseName": "description",
            "type": "SpecimenDescriptionDto",
            "format": ""
        },
        {
            "name": "netMass",
            "baseName": "netMass",
            "type": "SpecimenApplicantDtoNetMass",
            "format": ""
        },
        {
            "name": "quantity",
            "baseName": "quantity",
            "type": "number",
            "format": ""
        },
        {
            "name": "citesAppendix",
            "baseName": "citesAppendix",
            "type": "SpecimenApplicantDtoCitesAppendixEnum",
            "format": ""
        },
        {
            "name": "speciesList",
            "baseName": "speciesList",
            "type": "SpecimenApplicantDtoSpeciesListEnum",
            "format": ""
        },
        {
            "name": "source",
            "baseName": "source",
            "type": "SpecimenApplicantDtoSourceEnum",
            "format": ""
        },
        {
            "name": "purpose",
            "baseName": "purpose",
            "type": "SpecimenApplicantDtoPurposeEnum",
            "format": ""
        },
        {
            "name": "specimenOrigin",
            "baseName": "specimenOrigin",
            "type": "SpecimenCountryDataApplicantDto",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return SpecimenApplicantDto.attributeTypeMap;
    }

    public constructor() {
    }
}


export enum SpecimenApplicantDtoCitesAppendixEnum {
    I = 'I',
    Ii = 'II',
    Iii = 'III',
    NotListed = 'notListed'
}
export enum SpecimenApplicantDtoSpeciesListEnum {
    A = 'A',
    B = 'B',
    C = 'C',
    D = 'D',
    NotListed = 'notListed'
}
export enum SpecimenApplicantDtoSourceEnum {
    W = 'W',
    R = 'R',
    D = 'D',
    A = 'A',
    C = 'C',
    F = 'F',
    I = 'I',
    O = 'O',
    U = 'U',
    X = 'X',
    Y = 'Y'
}
export enum SpecimenApplicantDtoPurposeEnum {
    B = 'B',
    E = 'E',
    G = 'G',
    H = 'H',
    L = 'L',
    M = 'M',
    N = 'N',
    P = 'P',
    Q = 'Q',
    S = 'S',
    T = 'T',
    Z = 'Z'
}

